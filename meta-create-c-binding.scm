;;;  This is what I would expect the generator to do, but without the string concatenation:
;;;
;;;  static SCM Py_Initialize_wrapper(SCM unused)
;;;  {
;;;    WITH_PYTHON_LOCK(Py_Initialize());
;;;    return SCM_UNSPECIFIED;
;;;  }
;;;
;;;  static SCM Py_Finalize_wrapper(SCM unused)
;;;  {
;;;    WITH_PYTHON_LOCK(Py_Finalize())
;;;    return SCM_UNSPECIFIED;
;;;  }


(define temp-data
  (list
   "/*"
   " * This code was automatically generated by meta-create-c-binding.scm."
   " * Do not edit directly"
   " */"
   ""
   "static SCM Py_Initialize_wrapper(SCM unused)"
   "{"
   "  WITH_PYTHON_LOCK(Py_Initialize());"
   "  return SCM_UNSPECIFIED;"
   "}"
   ""
   "static SCM Py_Finalize_wrapper(SCM unused)"
   "{"
   "  WITH_PYTHON_LOCK(Py_Finalize())"
   "  return SCM_UNSPECIFIED;"
   "}"))

(map (lambda (x) (display (string-append x "\n")))
     temp-data)
